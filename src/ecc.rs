//! Reed Solomon error correction

pub fn compute_ecc(data: &mut [u8; 2340]) {
    compute_ecc_p(data);
    compute_ecc_q(data);
}

fn compute_ecc_p(data: &mut [u8; 2340]) {
    let (data, p) = data.split_at_mut(2064);

    for i in 0..86u16 {
        let mut a = 0;
        let mut b = 0;

        for d in data.iter().skip(i as usize).step_by(86) {
            a = ECC_FORWARD_LUT[usize::from(d ^ a)];
            b ^= d;
        }

        a = ECC_BACKWARD_LUT[usize::from(ECC_FORWARD_LUT[usize::from(a)] ^ b)];
        p[usize::from(i)] = a;
        p[usize::from(i + 86)] = a ^ b;
    }
}

fn compute_ecc_q(data: &mut [u8; 2340]) {
    let (data, p) = data.split_at_mut(2236);

    for i in 0..52u16 {
        let mut pos = usize::from((i / 2) * 86 + (i & 1));

        let mut a = 0;
        let mut b = 0;

        for _ in 0..43 {
            let d = data[pos];

            a = ECC_FORWARD_LUT[usize::from(d ^ a)];
            b ^= d;

            pos += 88;
            if pos >= 2236 {
                pos -= 2236;
            }
        }

        a = ECC_BACKWARD_LUT[usize::from(ECC_FORWARD_LUT[usize::from(a)] ^ b)];
        p[usize::from(i)] = a;
        p[usize::from(i + 52)] = a ^ b;
    }
}

pub static ECC_FORWARD_LUT: [u8; 256] = [
    0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c, 0x0e, 0x10, 0x12, 0x14, 0x16, 0x18, 0x1a, 0x1c, 0x1e,
    0x20, 0x22, 0x24, 0x26, 0x28, 0x2a, 0x2c, 0x2e, 0x30, 0x32, 0x34, 0x36, 0x38, 0x3a, 0x3c, 0x3e,
    0x40, 0x42, 0x44, 0x46, 0x48, 0x4a, 0x4c, 0x4e, 0x50, 0x52, 0x54, 0x56, 0x58, 0x5a, 0x5c, 0x5e,
    0x60, 0x62, 0x64, 0x66, 0x68, 0x6a, 0x6c, 0x6e, 0x70, 0x72, 0x74, 0x76, 0x78, 0x7a, 0x7c, 0x7e,
    0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c, 0x8e, 0x90, 0x92, 0x94, 0x96, 0x98, 0x9a, 0x9c, 0x9e,
    0xa0, 0xa2, 0xa4, 0xa6, 0xa8, 0xaa, 0xac, 0xae, 0xb0, 0xb2, 0xb4, 0xb6, 0xb8, 0xba, 0xbc, 0xbe,
    0xc0, 0xc2, 0xc4, 0xc6, 0xc8, 0xca, 0xcc, 0xce, 0xd0, 0xd2, 0xd4, 0xd6, 0xd8, 0xda, 0xdc, 0xde,
    0xe0, 0xe2, 0xe4, 0xe6, 0xe8, 0xea, 0xec, 0xee, 0xf0, 0xf2, 0xf4, 0xf6, 0xf8, 0xfa, 0xfc, 0xfe,
    0x1d, 0x1f, 0x19, 0x1b, 0x15, 0x17, 0x11, 0x13, 0x0d, 0x0f, 0x09, 0x0b, 0x05, 0x07, 0x01, 0x03,
    0x3d, 0x3f, 0x39, 0x3b, 0x35, 0x37, 0x31, 0x33, 0x2d, 0x2f, 0x29, 0x2b, 0x25, 0x27, 0x21, 0x23,
    0x5d, 0x5f, 0x59, 0x5b, 0x55, 0x57, 0x51, 0x53, 0x4d, 0x4f, 0x49, 0x4b, 0x45, 0x47, 0x41, 0x43,
    0x7d, 0x7f, 0x79, 0x7b, 0x75, 0x77, 0x71, 0x73, 0x6d, 0x6f, 0x69, 0x6b, 0x65, 0x67, 0x61, 0x63,
    0x9d, 0x9f, 0x99, 0x9b, 0x95, 0x97, 0x91, 0x93, 0x8d, 0x8f, 0x89, 0x8b, 0x85, 0x87, 0x81, 0x83,
    0xbd, 0xbf, 0xb9, 0xbb, 0xb5, 0xb7, 0xb1, 0xb3, 0xad, 0xaf, 0xa9, 0xab, 0xa5, 0xa7, 0xa1, 0xa3,
    0xdd, 0xdf, 0xd9, 0xdb, 0xd5, 0xd7, 0xd1, 0xd3, 0xcd, 0xcf, 0xc9, 0xcb, 0xc5, 0xc7, 0xc1, 0xc3,
    0xfd, 0xff, 0xf9, 0xfb, 0xf5, 0xf7, 0xf1, 0xf3, 0xed, 0xef, 0xe9, 0xeb, 0xe5, 0xe7, 0xe1, 0xe3,
];

pub static ECC_BACKWARD_LUT: [u8; 256] = [
    0x00, 0xf4, 0xf5, 0x01, 0xf7, 0x03, 0x02, 0xf6, 0xf3, 0x07, 0x06, 0xf2, 0x04, 0xf0, 0xf1, 0x05,
    0xfb, 0x0f, 0x0e, 0xfa, 0x0c, 0xf8, 0xf9, 0x0d, 0x08, 0xfc, 0xfd, 0x09, 0xff, 0x0b, 0x0a, 0xfe,
    0xeb, 0x1f, 0x1e, 0xea, 0x1c, 0xe8, 0xe9, 0x1d, 0x18, 0xec, 0xed, 0x19, 0xef, 0x1b, 0x1a, 0xee,
    0x10, 0xe4, 0xe5, 0x11, 0xe7, 0x13, 0x12, 0xe6, 0xe3, 0x17, 0x16, 0xe2, 0x14, 0xe0, 0xe1, 0x15,
    0xcb, 0x3f, 0x3e, 0xca, 0x3c, 0xc8, 0xc9, 0x3d, 0x38, 0xcc, 0xcd, 0x39, 0xcf, 0x3b, 0x3a, 0xce,
    0x30, 0xc4, 0xc5, 0x31, 0xc7, 0x33, 0x32, 0xc6, 0xc3, 0x37, 0x36, 0xc2, 0x34, 0xc0, 0xc1, 0x35,
    0x20, 0xd4, 0xd5, 0x21, 0xd7, 0x23, 0x22, 0xd6, 0xd3, 0x27, 0x26, 0xd2, 0x24, 0xd0, 0xd1, 0x25,
    0xdb, 0x2f, 0x2e, 0xda, 0x2c, 0xd8, 0xd9, 0x2d, 0x28, 0xdc, 0xdd, 0x29, 0xdf, 0x2b, 0x2a, 0xde,
    0x8b, 0x7f, 0x7e, 0x8a, 0x7c, 0x88, 0x89, 0x7d, 0x78, 0x8c, 0x8d, 0x79, 0x8f, 0x7b, 0x7a, 0x8e,
    0x70, 0x84, 0x85, 0x71, 0x87, 0x73, 0x72, 0x86, 0x83, 0x77, 0x76, 0x82, 0x74, 0x80, 0x81, 0x75,
    0x60, 0x94, 0x95, 0x61, 0x97, 0x63, 0x62, 0x96, 0x93, 0x67, 0x66, 0x92, 0x64, 0x90, 0x91, 0x65,
    0x9b, 0x6f, 0x6e, 0x9a, 0x6c, 0x98, 0x99, 0x6d, 0x68, 0x9c, 0x9d, 0x69, 0x9f, 0x6b, 0x6a, 0x9e,
    0x40, 0xb4, 0xb5, 0x41, 0xb7, 0x43, 0x42, 0xb6, 0xb3, 0x47, 0x46, 0xb2, 0x44, 0xb0, 0xb1, 0x45,
    0xbb, 0x4f, 0x4e, 0xba, 0x4c, 0xb8, 0xb9, 0x4d, 0x48, 0xbc, 0xbd, 0x49, 0xbf, 0x4b, 0x4a, 0xbe,
    0xab, 0x5f, 0x5e, 0xaa, 0x5c, 0xa8, 0xa9, 0x5d, 0x58, 0xac, 0xad, 0x59, 0xaf, 0x5b, 0x5a, 0xae,
    0x50, 0xa4, 0xa5, 0x51, 0xa7, 0x53, 0x52, 0xa6, 0xa3, 0x57, 0x56, 0xa2, 0x54, 0xa0, 0xa1, 0x55,
];

#[test]
fn gen_luts() {
    for (i, &f) in ECC_FORWARD_LUT.iter().enumerate() {
        let i = i as u8;
        let x = if i & 0x80 != 0 { 0x1d } else { 0 };

        let r = (i << 1) ^ x;

        assert_eq!(f, r);
        assert_eq!(ECC_BACKWARD_LUT[(i ^ r) as usize], i);
    }
}

#[test]
fn test_ecc_gen() {
    // Mode-1 sector
    let sector: [u8; 0x930] = [
        0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x04, 0x40,
        0x01, 0xe8, 0x36, 0x01, 0x00, 0x00, 0x89, 0xe0, 0xe8, 0x54, 0xbf, 0x00, 0x00, 0x83, 0xc4,
        0x0c, 0x5d, 0x5f, 0x5e, 0xc2, 0x04, 0x00, 0x56, 0x57, 0x55, 0x83, 0xec, 0x1c, 0x50, 0x52,
        0x89, 0xdf, 0x89, 0x4c, 0x24, 0x10, 0x31, 0xdb, 0xc7, 0x44, 0x24, 0x18, 0x01, 0x00, 0x00,
        0x00, 0x89, 0x5c, 0x24, 0x1c, 0x89, 0xfa, 0xb8, 0x20, 0x00, 0x00, 0x00, 0xe8, 0xb1, 0x02,
        0x00, 0x00, 0x83, 0xe8, 0x06, 0x89, 0x44, 0x24, 0x20, 0x31, 0xc9, 0x31, 0xf6, 0x31, 0xc0,
        0x66, 0x89, 0xd8, 0x43, 0x03, 0x44, 0x24, 0x04, 0x8a, 0x00, 0x8b, 0x6c, 0x24, 0x04, 0x3c,
        0x20, 0x74, 0x22, 0x84, 0xc0, 0x74, 0x1e, 0x25, 0xff, 0x00, 0x00, 0x00, 0x89, 0xfa, 0xe8,
        0x82, 0x02, 0x00, 0x00, 0x83, 0xe8, 0x03, 0x01, 0xc1, 0x31, 0xc0, 0x66, 0x89, 0xd8, 0x46,
        0x43, 0x01, 0xe8, 0x8a, 0x00, 0xeb, 0xda, 0x83, 0xc1, 0x03, 0x66, 0x83, 0x7c, 0x24, 0x18,
        0x00, 0x74, 0x16, 0x8b, 0x54, 0x24, 0x10, 0x66, 0x89, 0x0a, 0x66, 0x89, 0x72, 0x02, 0x31,
        0xc9, 0x89, 0x4c, 0x24, 0x18, 0xe9, 0x88, 0x00, 0x00, 0x00, 0x8b, 0x54, 0x24, 0x20, 0x01,
        0xca, 0x89, 0x54, 0x24, 0x14, 0x0f, 0xb7, 0x6c, 0x24, 0x1c, 0xc1, 0xe5, 0x02, 0x03, 0x6c,
        0x24, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0x00, 0x89, 0x54, 0x24, 0x0c, 0x31, 0xd2, 0x66,
        0x8b, 0x54, 0x24, 0x14, 0x89, 0x54, 0x24, 0x08, 0x8b, 0x54, 0x24, 0x0c, 0x03, 0x54, 0x24,
        0x08, 0x89, 0x54, 0x24, 0x08, 0x31, 0xd2, 0x66, 0x8b, 0x14, 0x24, 0x89, 0x54, 0x24, 0x0c,
        0x8b, 0x54, 0x24, 0x08, 0x3b, 0x54, 0x24, 0x0c, 0x7f, 0x0f, 0x8b, 0x54, 0x24, 0x14, 0x66,
        0x01, 0x55, 0x00, 0x46, 0x66, 0x01, 0x75, 0x02, 0xeb, 0x2e, 0x8b, 0x54, 0x24, 0x1c, 0x42,
        0x89, 0x54, 0x24, 0x1c, 0x66, 0x83, 0xfa, 0x1e, 0x72, 0x0b, 0x31, 0xed, 0x31, 0xd2, 0x8e,
        0xea, 0x65, 0xc6, 0x45, 0x00, 0x00, 0x0f, 0xb7, 0x6c, 0x24, 0x1c, 0xc1, 0xe5, 0x02, 0x03,
        0x6c, 0x24, 0x10, 0x66, 0x89, 0x4d, 0x00, 0x66, 0x89, 0x75, 0x02, 0x84, 0xc0, 0x0f, 0x85,
        0x15, 0xff, 0xff, 0xff, 0x8b, 0x44, 0x24, 0x1c, 0x40, 0x83, 0xc4, 0x24, 0x5d, 0x5f, 0x5e,
        0xc3, 0x56, 0x57, 0x55, 0x83, 0xec, 0x20, 0x50, 0x52, 0x89, 0xdd, 0x88, 0x4c, 0x24, 0x24,
        0x31, 0xff, 0x89, 0x7c, 0x24, 0x1c, 0x89, 0xd8, 0xe8, 0xa7, 0x01, 0x00, 0x00, 0x89, 0x44,
        0x24, 0x14, 0x89, 0x7c, 0x24, 0x10, 0xeb, 0x20, 0x31, 0xc0, 0x66, 0x8b, 0x44, 0x24, 0x10,
        0xc1, 0xe0, 0x02, 0x03, 0x44, 0x24, 0x38, 0x66, 0x8b, 0x10, 0x66, 0x3b, 0x54, 0x24, 0x1c,
        0x76, 0x04, 0x89, 0x54, 0x24, 0x1c, 0xff, 0x44, 0x24, 0x10, 0x8b, 0x44, 0x24, 0x10, 0x8b,
        0x4c, 0x24, 0x3c, 0x66, 0x39, 0xc8, 0x72, 0xd3, 0x8b, 0x44, 0x24, 0x14, 0x0f, 0xaf, 0xc1,
        0x89, 0x44, 0x24, 0x18, 0x8b, 0x44, 0x24, 0x1c, 0x0f, 0xaf, 0x44, 0x24, 0x18, 0x31, 0xf6,
        0x66, 0x89, 0xc6, 0x8d, 0x56, 0x10, 0x31, 0xc9, 0xbb, 0x04, 0x00, 0x00, 0x00, 0x8b, 0x44,
        0x24, 0x04, 0xe8, 0xe6, 0xb8, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0x00, 0x8b, 0x44, 0x24,
        0x04, 0xe8, 0x3e, 0xb9, 0x00, 0x00, 0x8b, 0x5c, 0x24, 0x04, 0x8b, 0x1b, 0xba, 0x90, 0x48,
        0x42, 0x00, 0x89, 0xd8, 0xe8, 0xbf, 0xaf, 0x00, 0x00, 0xc7, 0x43, 0x04, 0x00, 0x00, 0x00,
        0x00, 0x8b, 0x44, 0x24, 0x1c, 0x66, 0x89, 0x43, 0x08, 0x8b, 0x44, 0x24, 0x18, 0x66, 0x89,
        0x43, 0x0a, 0x66, 0xc7, 0x43, 0x0c, 0x00, 0x00, 0x66, 0xc7, 0x43, 0x0e, 0x00, 0x00, 0x8b,
        0x44, 0x24, 0x04, 0x8b, 0x00, 0x83, 0xc0, 0x10, 0x89, 0x44, 0x24, 0x08, 0x89, 0xf3, 0x31,
        0xd2, 0xe8, 0x1e, 0xf3, 0x00, 0x00, 0x31, 0xdb, 0x89, 0x5c, 0x24, 0x10, 0xe9, 0xab, 0x00,
        0x00, 0x00, 0x31, 0xc0, 0x66, 0x8b, 0x44, 0x24, 0x10, 0xc1, 0xe0, 0x02, 0x03, 0x44, 0x24,
        0x38, 0x31, 0xd2, 0x66, 0x8b, 0x10, 0x31, 0xc0, 0x66, 0x8b, 0x44, 0x24, 0x1c, 0x29, 0xd0,
        0x89, 0xc2, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x74, 0x24, 0x08, 0x01, 0xc6,
        0x31, 0xdb, 0x89, 0x5c, 0x24, 0x20, 0xeb, 0x42, 0x31, 0xc9, 0x8a, 0x4c, 0x24, 0x24, 0x31,
        0xdb, 0x66, 0x8b, 0x5c, 0x24, 0x1c, 0x31, 0xc0, 0x66, 0x89, 0xf8, 0x89, 0x44, 0x24, 0x0c,
        0x89, 0xd7, 0x8b, 0x04, 0x24, 0x03, 0x44, 0x24, 0x0c, 0x8a, 0x00, 0x25, 0xff, 0x00, 0x00,
        0x00, 0x89, 0xea, 0xe8, 0x93, 0x00, 0x00, 0x00, 0x89, 0xf2, 0xe8, 0xac, 0x00, 0x00, 0x00,
        0x25, 0xff, 0xff, 0x00, 0x00, 0x83, 0xe8, 0x03, 0x01, 0xc6, 0xff, 0x44, 0x24, 0x20, 0x31,
        0xc0, 0x66, 0x8b, 0x44, 0x24, 0x10, 0xc1, 0xe0, 0x02, 0x03, 0x44, 0x24, 0x38, 0x89, 0xfa,
        0x42, 0x8b, 0x5c, 0x24, 0x20, 0x66, 0x3b, 0x58, 0x02, 0x72, 0xa3, 0x31, 0xc0, 0x66, 0x8b,
        0x44, 0x24, 0x14, 0x31, 0xdb, 0x66, 0x8b, 0x5c, 0x24, 0x1c, 0x0f, 0xaf, 0xc3, 0x89, 0xd7,
        0x01, 0x44, 0x24, 0x08, 0xff, 0x44, 0x24, 0x10, 0x8b, 0x44, 0x24, 0x10, 0x66, 0x3b, 0x44,
        0x24, 0x3c, 0x0f, 0x82, 0x46, 0xff, 0xff, 0xff, 0xba, 0x04, 0x00, 0x00, 0x00, 0x8b, 0x44,
        0x24, 0x04, 0xe8, 0x2b, 0xb8, 0x00, 0x00, 0x83, 0xc4, 0x28, 0x5d, 0x5f, 0x5e, 0xc2, 0x08,
        0x00, 0x25, 0xff, 0x00, 0x00, 0x00, 0xe8, 0x18, 0x00, 0x00, 0x00, 0x66, 0x8b, 0x40, 0x08,
        0xc3, 0x52, 0x89, 0xc2, 0xb8, 0x20, 0x00, 0x00, 0x00, 0xe8, 0x06, 0x00, 0x00, 0x00, 0x66,
        0x8b, 0x40, 0x0a, 0x5a, 0xc3, 0x53, 0x51, 0x89, 0xd1, 0x3c, 0x20, 0x73, 0x02, 0xb0, 0x40,
        0x31, 0xd2, 0x88, 0xc2, 0x83, 0xea, 0x20, 0xbb, 0xff, 0xff, 0xff, 0xff, 0x89, 0xc8, 0xe8,
        0x11, 0x6f, 0xff, 0xff, 0x59, 0x5b, 0xc3, 0x56, 0x57, 0x55, 0x83, 0xec, 0x0c, 0x89, 0xc6,
        0x89, 0x5c, 0x24, 0x04, 0x88, 0x4c, 0x24, 0x08, 0x66, 0x8b, 0x40, 0x0a, 0x89, 0x04, 0x24,
        0x66, 0x8b, 0x4e, 0x08, 0x89, 0xd5, 0x31, 0xff, 0x83, 0xc6, 0x10, 0xeb, 0x3a, 0x89, 0xe8,
        0x31, 0xdb, 0xeb, 0x25, 0x89, 0xf2, 0x46, 0x8a, 0x12, 0x80, 0xfa, 0xc1, 0x72, 0x19, 0x76,
        0x07, 0x80, 0xfa, 0xc8, 0x74, 0x0a, 0xeb, 0x10, 0x8a, 0x54, 0x24, 0x08, 0x88, 0x10, 0xeb,
        0x08, 0x80, 0x38, 0x00, 0x75, 0x03, 0xc6, 0x00, 0xc8, 0x40, 0x43, 0x66, 0x39, 0xcb, 0x72,
        0xd6, 0x31, 0xc0, 0x66, 0x8b, 0x44, 0x24, 0x04, 0x01, 0xc5, 0x47, 0x66, 0x3b, 0x3c, 0x24,
        0x72, 0xc0, 0x89, 0xc8, 0x83, 0xc4, 0x0c, 0x5d, 0x5f, 0x5e, 0xc3, 0x53, 0x51, 0x56, 0x57,
        0x55, 0x89, 0xc3, 0x31, 0xc9, 0xe8, 0xf1, 0x0a, 0x00, 0x00, 0x85, 0xc0, 0x74, 0x33, 0x80,
        0x3d, 0xa0, 0x7a, 0x42, 0x00, 0x00, 0x75, 0x2a, 0xe8, 0x01, 0x0b, 0x00, 0x00, 0x89, 0xc2,
        0xf6, 0x00, 0x02, 0x75, 0x05, 0xf6, 0x00, 0x08, 0x74, 0x19, 0xb9, 0x01, 0x00, 0x00, 0x00,
        0x83, 0x3d, 0x43, 0x76, 0x42, 0x00, 0x00, 0x74, 0x0b, 0xf6, 0x02, 0x08, 0x74, 0x06, 0x89,
        0x0d, 0x04, 0x9b, 0x42, 0x00, 0x8a, 0x25, 0xa0, 0x7a, 0x42, 0x00, 0x84, 0xe4, 0x74, 0x0a,
        0x88, 0xe2, 0xfe, 0xca, 0x88, 0x15, 0xa0, 0x7a, 0x42, 0x00, 0x8b, 0x2d, 0xcf, 0x75, 0x42,
        0x00, 0x83, 0xfd, 0x02, 0x76, 0x0e, 0x8d, 0x7d, 0xff, 0x89, 0x3d, 0xcf, 0x75, 0x42, 0x00,
        0xe9, 0x85, 0x00, 0x00, 0x00, 0x75, 0x1f, 0xc7, 0x05, 0xcf, 0x75, 0x42, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x8b, 0x15, 0x94, 0x9f, 0x43, 0x00, 0xa1, 0xf4, 0x58, 0x43, 0x00, 0xe8, 0x38,
        0x97, 0x00, 0x00, 0xe9, 0x64, 0x00, 0x00, 0x00, 0x85, 0xed, 0x74, 0x46, 0x83, 0x3d, 0x3f,
        0x76, 0x42, 0x00, 0x00, 0x75, 0x0e, 0xe8, 0x15, 0x9a, 0x00, 0x00, 0x83, 0xf8, 0x01, 0x75,
        0x1e, 0x89, 0xc1, 0xeb, 0x1a, 0x8b, 0x83, 0xd0, 0x00, 0x00, 0x00, 0x85, 0xc0, 0x75, 0x07,
        0xb9, 0x01, 0x00, 0x00, 0x00, 0xeb, 0x09, 0x8d, 0x50, 0xff, 0x89, 0x93, 0xd0, 0x00, 0x00,
        0x00, 0x85, 0xc9, 0x74, 0x2b, 0xe8, 0x8b, 0x99, 0x00, 0x00, 0xb8, 0xf4, 0x58, 0x43, 0x00,
        0xe8, 0xe8, 0xba, 0x00, 0x00, 0xeb, 0x1a, 0x8b, 0xb3, 0xd0, 0x00, 0x00, 0x00, 0x85, 0xf6,
        0x75, 0x07, 0xb9, 0x01, 0x00, 0x00, 0x00, 0xeb, 0x09, 0x8d, 0x7e, 0xff, 0x89, 0xbb, 0xd0,
        0x00, 0x00, 0x00, 0x85, 0xc9, 0x74, 0x51, 0xc7, 0x43, 0x08, 0x01, 0x00, 0x00, 0x00, 0x83,
        0x3d, 0xcb, 0x75, 0x42, 0x00, 0x00, 0x74, 0x33, 0x8b, 0x83, 0xd4, 0x00, 0x00, 0x00, 0xe8,
        0xd3, 0x6d, 0xff, 0xff, 0xc7, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0xff, 0x0d, 0x58, 0x59,
        0x43, 0x00, 0x8b, 0x40, 0x14, 0xc1, 0xe0, 0x02, 0x05, 0x6c, 0x51, 0x43, 0x00, 0xe8, 0x90,
        0xba, 0x00, 0x00, 0x8b, 0x83, 0xd4, 0x00, 0x00, 0x00, 0xe8, 0x05, 0x6e, 0xff, 0xff, 0x31,
        0xf6, 0x89, 0x35, 0xcf, 0x75, 0x42, 0x00, 0x89, 0x35, 0xcb, 0x75, 0x42, 0x00, 0x8b, 0xab,
        0xe0, 0x00, 0x00, 0x00, 0x85, 0xed, 0x0f, 0x84, 0x8c, 0x00, 0x00, 0x00, 0x89, 0xe8, 0xe8,
        0xa0, 0xc4, 0x00, 0x00, 0x89, 0xc6, 0x83, 0xc0, 0x14, 0x8b, 0x93, 0xdc, 0x00, 0x00, 0x00,
        0x42, 0x89, 0x93, 0xdc, 0x00, 0x00, 0x00, 0x83, 0x3d, 0x3f, 0x76, 0x42, 0x00, 0x00, 0x75,
        0x21, 0x85, 0xc9, 0x75, 0x25, 0x3b, 0x10, 0x7d, 0x21, 0x83, 0x3d, 0xcf, 0x75, 0x42, 0x00,
        0x00, 0x74, 0x22, 0xa1, 0xf4, 0x58, 0x43, 0x00, 0xe8, 0x7f, 0x99, 0x00, 0x00, 0x85, 0xc0,
        0x75, 0x14, 0xeb, 0x08, 0x85, 0xc9, 0x75, 0x04, 0x3b, 0x10, 0x7c, 0x0a, 0xc7, 0x83, 0xdc,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x83, 0xdc, 0x00, 0x00, 0x00, 0x89, 0xc1,
        0xc1, 0xe1, 0x02, 0x29, 0xc1, 0xc1, 0xe1, 0x02, 0x8d, 0x46, 0x18, 0x01, 0xc8, 0xf6, 0x43,
        0x04, 0x40, 0x75, 0x0b, 0x8b, 0x10, 0x89, 0x53, 0x64, 0x8b, 0x50, 0x04, 0x89, 0x53, 0x68,
        0x8b, 0x40, 0x08, 0x89, 0x43, 0x1c, 0x8b, 0x83, 0xe0, 0x00, 0x00, 0x00, 0xe8, 0x2c, 0xc4,
        0x00, 0x00, 0x31, 0xc0, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3, 0x56, 0x57, 0x55, 0x83, 0xec,
        0x14, 0x89, 0xc6, 0x89, 0x54, 0x24, 0x08, 0x89, 0xcd, 0xc6, 0x05, 0xa0, 0x7a, 0x42, 0x00,
        0x03, 0x83, 0x3d, 0x3f, 0x76, 0x42, 0x00, 0x00, 0x74, 0x2b, 0x80, 0x3d, 0xb4, 0x75, 0x42,
        0x00, 0x00, 0x74, 0x22, 0x51, 0x68, 0x98, 0x48, 0x42, 0x00, 0xe8, 0x6b, 0x89, 0xff, 0xff,
        0x83, 0xc4, 0x08, 0x8b, 0x0d, 0x35, 0x75, 0x42, 0x00, 0x51, 0x68, 0x9f, 0x48, 0x42, 0x00,
        0xe8, 0x57, 0x89, 0xff, 0xff, 0x83, 0xc4, 0x08, 0x89, 0x2d, 0x0c, 0x59, 0x43, 0x00, 0xe8,
        0x00, 0x09, 0x00, 0x00, 0xc7, 0x46, 0x08, 0x04, 0x00, 0x00, 0x00, 0x85, 0xdb, 0x74, 0x37,
        0x83, 0x7c, 0x24, 0x24, 0x00, 0x75, 0x30, 0x89, 0xd8, 0xe8, 0xa6, 0xc3, 0x00, 0x00, 0x83,
        0xc0, 0x14, 0x8b, 0x96, 0xc4, 0x00, 0x00, 0x00, 0xc1, 0xe2, 0x03, 0x01, 0xd0, 0x8b, 0x10,
        0x89, 0x96, 0xe0, 0x00, 0x00, 0x00, 0x85, 0xd2, 0x74, 0x06, 0x8b, 0x40, 0x04, 0x89, 0x46,
        0x20, 0x89, 0xd8, 0xe8, 0x90, 0xc3, 0x00, 0x00, 0xeb, 0x11, 0x89, 0x9e, 0xe0, 0x00, 0x00,
        0x00, 0x85, 0xdb, 0x74, 0x07, 0x8b, 0x44, 0x24, 0x24, 0x89, 0x46, 0x20, 0xc7, 0x86, 0xdc,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x9e, 0xe0, 0x00, 0x00, 0x00, 0x85, 0xdb,
        0x74, 0x34, 0x8b, 0x4e, 0x20, 0x85, 0xc9, 0x75, 0x2d, 0x51, 0x53, 0x8b, 0x54, 0x24, 0x10,
        0x52, 0x68, 0xa2, 0x48, 0x42, 0x00, 0xe8, 0x46, 0x88, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x8b,
        0x5e, 0x20, 0x53, 0x8b, 0x8e, 0xe0, 0x00, 0x00, 0x00, 0x51, 0x52, 0x68, 0xd3, 0x48, 0x42,
        0x00, 0xe8, 0x41, 0x89, 0xff, 0xff, 0x83, 0xc4, 0x10, 0x83, 0xbe, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x74, 0x42, 0x8b, 0x46, 0x20, 0xe8, 0x13, 0xc3, 0x00, 0x00, 0x8b, 0x5c, 0x24, 0x08,
        0x31, 0xd2, 0xe8, 0xa8, 0x6b, 0xff, 0xff, 0x66, 0x83, 0x78, 0x0c, 0x00, 0x75, 0x07, 0x66,
        0x83, 0x78, 0x0e, 0x00, 0x74, 0x12, 0x80, 0x4e, 0x04, 0x40, 0x8b, 0x46, 0x2c, 0x89, 0x46,
        0x64, 0x8b, 0x46, 0x30, 0x89, 0x46, 0x68, 0xeb, 0x07, 0x81, 0x66, 0x04, 0xbf, 0xff, 0xff,
        0x0f, 0x8b, 0x46, 0x20, 0xe8, 0xea, 0xc2, 0x00, 0x00, 0x83, 0x3d, 0xc7, 0x75, 0x42, 0x00,
        0x00, 0x0f, 0x84, 0xa9, 0x01, 0x00, 0x00, 0x89, 0xef, 0xc1, 0xff, 0x10, 0x89, 0xeb, 0x81,
        0xe3, 0xff, 0xff, 0x00, 0x00, 0x83, 0x3d, 0x98, 0x9f, 0x43, 0x00, 0x00, 0x75, 0x1a, 0x68,
        0x04, 0x49, 0x42, 0x00, 0xe8, 0xb2, 0x87, 0xff, 0xff, 0x83, 0xc4, 0x04, 0x68, 0x04, 0x49,
        0x42, 0x00, 0xe8, 0xb9, 0x88, 0xff, 0xff, 0x83, 0xc4, 0x04, 0xba, 0x04, 0x00, 0x00, 0x00,
        0xb8, 0xa0, 0x9f, 0x43, 0x00, 0xe8, 0xf4, 0xb3, 0x00, 0x00, 0xa1, 0xa0, 0x9f, 0x43, 0x00,
        0x8b, 0x7c, 0xb8, 0x04, 0x01, 0xf8, 0x89, 0xda, 0x8b, 0x44, 0xd0, 0x04, 0xa3, 0x94, 0x9f,
        0x43, 0x00, 0x50, 0x68, 0x1b, 0x49, 0x42, 0x00, 0xe8, 0x72, 0x87, 0xff, 0xff, 0x83, 0xc4,
        0x08, 0xa1, 0xa0, 0x9f, 0x43, 0x00, 0x01, 0xf8, 0x8b, 0x3c, 0xd0, 0xba, 0x04, 0x00, 0x00,
        0x00, 0xb8, 0xa0, 0x9f, 0x43, 0x00, 0xe8, 0xc2, 0xb3, 0x00, 0x00, 0x8b, 0x15, 0x94, 0x9f,
        0x43, 0x00, 0x85, 0xd2, 0x0f, 0x84, 0x0c, 0x01, 0x00, 0x00, 0x31, 0xc9, 0x31, 0xdb, 0x89,
        0xe0, 0xe8, 0x38, 0xb3, 0x00, 0x00, 0xa1, 0x98, 0x9f, 0x43, 0x00, 0x01, 0xf8, 0x50, 0x68,
        0x2d, 0x49, 0x42, 0x00, 0xe8, 0x2b, 0x87, 0xff, 0xff, 0x83, 0xc4, 0x08, 0x8b, 0x15, 0x98,
        0x9f, 0x43, 0x00, 0x01, 0xfa, 0xa1, 0x9c, 0x9f, 0x43, 0x00, 0x31, 0xdb, 0xe8, 0x4e, 0xf1,
        0x00, 0x00, 0x8b, 0x0d, 0x9c, 0x9f, 0x43, 0x00, 0x8b, 0x1d, 0x94, 0x9f, 0x43, 0x00, 0xba,
        0x01, 0x00, 0x00, 0x00, 0x8b, 0x04, 0x24, 0xe8, 0x29, 0xf2, 0x00, 0x00, 0x89, 0xc2, 0x50,
        0x68, 0x41, 0x49, 0x42, 0x00, 0xe8, 0xee, 0x86, 0xff, 0xff, 0x83, 0xc4, 0x08, 0x3b, 0x15,
        0x94, 0x9f, 0x43, 0x00, 0x0f, 0x85, 0x83, 0x00, 0x00, 0x00, 0x83, 0x3d, 0x3f, 0x76, 0x42,
        0x00, 0x00, 0x74, 0x32, 0x8b, 0x04, 0x24, 0xe8, 0x86, 0x85, 0x00, 0x00, 0x89, 0xc2, 0xc1,
        0xe0, 0x02, 0x29, 0xd0, 0x8d, 0x14, 0x00, 0xbb, 0x11, 0x2b, 0x00, 0x00, 0x89, 0xd0, 0xc1,
        0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x86, 0xd0, 0x00, 0x00, 0x00, 0x50, 0x68, 0x5e, 0x49, 0x42,
        0x00, 0xe8, 0xa7, 0x86, 0xff, 0xff, 0x83, 0xc4, 0x08, 0xcd, 0x67, 0x5e, 0x4e, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa1, 0xd4, 0x1b, 0xa1, 0xb8, 0x07, 0x2d, 0x29, 0xe0,
        0xea, 0xaa, 0xd1, 0x86, 0x89, 0xe5, 0x7c, 0x02, 0x64, 0x10, 0x5f, 0x1b, 0xa1, 0x52, 0x9b,
        0x3c, 0x20, 0xe5, 0x27, 0x3b, 0x83, 0xd7, 0x37, 0xc3, 0x55, 0x77, 0x7b, 0x80, 0x04, 0x9f,
        0x35, 0xb3, 0xf3, 0x5a, 0xfc, 0x7f, 0xcc, 0x16, 0xf1, 0xe5, 0x09, 0x7c, 0x72, 0xd4, 0x48,
        0xf4, 0x19, 0xf8, 0x32, 0xf4, 0x05, 0xee, 0x18, 0xd6, 0x4d, 0xb6, 0x8e, 0x2a, 0x89, 0x75,
        0x68, 0xb4, 0x4c, 0x14, 0x50, 0x0b, 0xea, 0x7c, 0xaf, 0x88, 0xe5, 0xb8, 0xda, 0x31, 0xe3,
        0xac, 0x5c, 0xc5, 0xeb, 0x1b, 0x9c, 0x5e, 0x7c, 0xfc, 0x94, 0xf0, 0xe1, 0x96, 0x8d, 0x2d,
        0xec, 0xc6, 0x05, 0x0a, 0x06, 0x15, 0x01, 0x95, 0x03, 0x1e, 0x92, 0x05, 0x17, 0x70, 0x8e,
        0x52, 0x5d, 0x98, 0xf6, 0x36, 0x24, 0x92, 0x3c, 0x8b, 0xc3, 0x0e, 0x11, 0x37, 0x5e, 0x97,
        0x50, 0xa7, 0xb3, 0x29, 0x41, 0xec, 0xba, 0xfb, 0xd9, 0x7c, 0x6b, 0x24, 0x8d, 0x61, 0x39,
        0x3e, 0xdd, 0xef, 0x19, 0x67, 0x64, 0xdb, 0x8d, 0xe9, 0xac, 0xf4, 0x23, 0x65, 0xc8, 0x8b,
        0x6f, 0x57, 0x48, 0x2e, 0xd7, 0xe4, 0x58, 0x84, 0xba, 0xb1, 0xaa, 0xf3, 0x3f, 0x0c, 0x2a,
        0x86, 0x17, 0x8b, 0x37, 0xfb, 0xb4, 0x77, 0x0b, 0xb3, 0xdf, 0x49, 0xbc, 0x92, 0x3c, 0x93,
        0x82, 0x22, 0x44, 0x60, 0x15, 0x13, 0xf9, 0xda, 0xa4, 0x02, 0xd2, 0x7a, 0x90, 0x00, 0x52,
        0xca, 0x68, 0x2c, 0x99, 0xc0, 0xad, 0x96, 0xdc, 0x43, 0x41, 0x6d, 0xa9, 0xf9, 0xd4, 0x38,
        0x34, 0x6a, 0xfe, 0xb0, 0x02, 0x0c, 0xfc, 0x4d, 0xf4, 0xe2, 0xca, 0x9e, 0x22, 0x6c, 0x1b,
        0x11, 0xbc, 0xcc, 0x6d, 0xcf, 0x91, 0xfe, 0xc7, 0x3d, 0x3c, 0x93, 0xe1, 0x3e, 0x9b, 0xda,
        0xea, 0xc4, 0x28, 0xad, 0x79, 0x8d, 0xd1, 0xb6, 0xb4, 0x3f, 0xbd, 0x17, 0x7f, 0x43, 0x47,
        0x9f, 0xfe, 0xe3, 0xcf, 0xf5, 0xe8, 0x70, 0x96, 0xbb, 0xf6, 0x8c, 0xd8,
    ];

    let mut s = sector.clone();

    // Zero the ECC
    for b in &mut s[2076..] {
        *b = 0;
    }

    compute_ecc(array_mut_ref![s, 12, 2340]);

    assert_eq!(sector, s);
}
